// Code generated by MockGen. DO NOT EDIT.
// Source: go_fiber_wibowo/app/module/wa_sender/service (interfaces: WaSenderService)

// Package service is a generated GoMock package.
package service

import (
	request "go_fiber_wibowo/app/module/wa_sender/request"
	response "go_fiber_wibowo/app/module/wa_sender/response"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWaSenderService is a mock of WaSenderService interface.
type MockWaSenderService struct {
	ctrl     *gomock.Controller
	recorder *MockWaSenderServiceMockRecorder
}

// MockWaSenderServiceMockRecorder is the mock recorder for MockWaSenderService.
type MockWaSenderServiceMockRecorder struct {
	mock *MockWaSenderService
}

// NewMockWaSenderService creates a new mock instance.
func NewMockWaSenderService(ctrl *gomock.Controller) *MockWaSenderService {
	mock := &MockWaSenderService{ctrl: ctrl}
	mock.recorder = &MockWaSenderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWaSenderService) EXPECT() *MockWaSenderServiceMockRecorder {
	return m.recorder
}

// SendOtp mocks base method.
func (m *MockWaSenderService) SendOtp(arg0 request.OtpRequest) (*response.OtpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendOtp", arg0)
	ret0, _ := ret[0].(*response.OtpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendOtp indicates an expected call of SendOtp.
func (mr *MockWaSenderServiceMockRecorder) SendOtp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendOtp", reflect.TypeOf((*MockWaSenderService)(nil).SendOtp), arg0)
}

// UpdateOtp mocks base method.
func (m *MockWaSenderService) UpdateOtp(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOtp", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOtp indicates an expected call of UpdateOtp.
func (mr *MockWaSenderServiceMockRecorder) UpdateOtp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOtp", reflect.TypeOf((*MockWaSenderService)(nil).UpdateOtp), arg0, arg1)
}
